apply plugin: 'com.android.library'
apply plugin: 'org.greenrobot.greendao'

// Start 以下这段功能是用来上传至代码库，其他项目不用复制这段代码
apply plugin: 'com.novoda.bintray-release'

publish {
    userOrg = 'chinarocky'// 这是代码仓库的账号
    groupId = 'android.frame'// 包名
    artifactId = 'MVPFrames'// 项目名
    publishVersion = rootProject.ext.android["versionName"]// 版本号
    desc = 'Android MVP development framework'
    website = 'https://github.com/DesignQu/'
}
// End 以上这段功能是用来上传至代码库

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        renderscriptTargetApi rootProject.ext.android["renderscriptTargetApi"]
        renderscriptSupportModeEnabled rootProject.ext.android["renderscriptSupportModeEnabled"]
    }

    // 移除lint检查的error，可以避免由于编译条件太过严格而编译不过的问题
    lintOptions {
        // InvalidPackage: Package not included in Android
        disable 'InvalidPackage'
        // Expected resource of type color [ResourceType] 资源类型错误
        disable "ResourceType"
        // 忽略因MissingTranslation导致Build Failed错误 "app_name" is not translated in "zh" (Chinese)
        disable 'MissingTranslation'

        abortOnError false
        checkReleaseBuilds false
    }

    dexOptions {
        preDexLibraries = false
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

buildscript {
    repositories {
        jcenter()
    }
}

dependencies {
    // Support
    compile(rootProject.ext.dependencies["support-v4"]) {
        exclude module: 'support-annotations'
    }
    compile(rootProject.ext.dependencies["appcompat-v7"]) {
        exclude module: 'support-annotations'
        exclude module: 'support-v4'
    }
    compile(rootProject.ext.dependencies["design"]) {
        exclude module: 'support-annotations'
        exclude module: 'appcompat-v7'
        exclude module: 'support-v4'
    }
    compile rootProject.ext.dependencies["annotations"]

    // Network
    compile(rootProject.ext.dependencies["retrofit"]) {
        exclude module: 'okhttp'
        exclude module: 'okio'
    }
    compile(rootProject.ext.dependencies["retrofit-converter-gson"]) {
        exclude module: 'gson'
        exclude module: 'okhttp'
        exclude module: 'okio'
        exclude module: 'retrofit'
    }
    compile(rootProject.ext.dependencies["retrofit-adapter-rxjava2"]) {
        exclude module: 'rxjava'
        exclude module: 'okhttp'
        exclude module: 'retrofit'
        exclude module: 'okio'
    }
    compile rootProject.ext.dependencies["okhttp3"]

    // Image
    compile(rootProject.ext.dependencies["glide"]) {
        exclude module: 'support-v4'
    }
    annotationProcessor(rootProject.ext.dependencies["glide-compiler"]) {
        exclude module: 'jsr305'
    }

    // Rx
    compile rootProject.ext.dependencies["rxjava2"]
    compile(rootProject.ext.dependencies["rxandroid2"]) {
        exclude module: 'rxjava'
    }
    compile(rootProject.ext.dependencies["rxcache2"]) {
        exclude module: 'rxjava'
        exclude module: 'dagger'
    }
    compile(rootProject.ext.dependencies["rxcache-jolyglot-gson"]) {
        exclude module: 'gson'
    }
    compile(rootProject.ext.dependencies["rxpermissions2"]) {
        exclude module: 'rxjava'
        exclude module: 'support-annotations'
    }

    // Tools
    compile(rootProject.ext.dependencies["butterknife"]) {
        exclude module: 'support-annotations'
    }

    compile rootProject.ext.dependencies["dagger2"]
    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]
    compile rootProject.ext.dependencies["androideventbus"]
    compile rootProject.ext.dependencies["gson"]

    compile rootProject.ext.dependencies["filedownloader"]

    // DB
    compile rootProject.ext.dependencies["greendao"]
    compile rootProject.ext.dependencies["sqlcipher"]

    // Log
    compile rootProject.ext.dependencies["logg"]
}